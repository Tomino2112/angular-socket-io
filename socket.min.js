angular.module("tomino2112.socket-io",[]).provider("socketFactory",function(){var a="socket:",b;this.$get=["$rootScope","$timeout",function(c,d){var f=function(g,h){return h?function(){var i=arguments;d(function(){h.apply(g,i)},0)}:angular.noop};return function e(h){h=h||{};var g=h.ioSocket||io.connect();var k=h.prefix===undefined?a:h.prefix;var m=h.scope||c;var j=function(n,o){g.on(n,o.__ng=f(g,o))};var l=function(n,o){g.once(n,o.__ng=f(g,o))};var i={on:j,addListener:j,once:l,emit:function(n,o,q){var p=arguments.length-1;var q=arguments[p];if(typeof q=="function"){q=f(g,q);arguments[p]=q}return g.emit.apply(g,arguments)},removeListener:function(o,n){if(n&&n.__ng){arguments[1]=n.__ng}return g.removeListener.apply(g,arguments)},removeAllListeners:function(){return g.removeAllListeners.apply(g,arguments)},disconnect:function(n){return g.disconnect(n)},connect:function(){return g.connect()},forward:function(n,o){if(n instanceof Array===false){n=[n]}if(!o){o=m}n.forEach(function(p){var r=k+p;var q=f(g,function(){Array.prototype.unshift.call(arguments,r);o.$broadcast.apply(o,arguments)});o.$on("$destroy",function(){g.removeListener(p,q)});g.on(p,q)})},socket:g};return i}}]});